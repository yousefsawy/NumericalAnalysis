# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Newton_Equi.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import numpy as np
import math
import sympy as sp
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D


class Newton_Equi_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1582, 737)
        self.tabWidget = QtWidgets.QTabWidget(Form)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 1591, 1131))
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_2.setGeometry(QtCore.QRect(0, 190, 1491, 101))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setGeometry(QtCore.QRect(10, 40, 55, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 0px;\n"
"border-style:inset;")
        self.label_2.setObjectName("label_2")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.groupBox_2)
        self.textBrowser_3.setGeometry(QtCore.QRect(860, 40, 301, 31))
        self.textBrowser_3.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.textBrowser_3.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_3.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.label_3 = QtWidgets.QLabel(self.groupBox_2)
        self.label_3.setGeometry(QtCore.QRect(780, 40, 55, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 0px;\n"
"border-style:inset;")
        self.label_3.setObjectName("label_3")
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.groupBox_2)
        self.textBrowser_4.setGeometry(QtCore.QRect(1250, 40, 231, 31))
        self.textBrowser_4.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.textBrowser_4.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_4.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.groupBox_2)
        self.textBrowser_5.setGeometry(QtCore.QRect(70, 40, 701, 31))
        self.textBrowser_5.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;\n"
"")
        self.textBrowser_5.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_5.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.label_4 = QtWidgets.QLabel(self.groupBox_2)
        self.label_4.setGeometry(QtCore.QRect(1170, 40, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 0px;\n"
"border-style:inset;")
        self.label_4.setObjectName("label_4")
        self.pushButton = QtWidgets.QPushButton(self.tab)
        self.pushButton.setEnabled(True)
        self.pushButton.setGeometry(QtCore.QRect(510, 130, 231, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.groupBox = QtWidgets.QGroupBox(self.tab)
        self.groupBox.setGeometry(QtCore.QRect(0, 20, 1551, 81))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(10, 30, 381, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setUnderline(False)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_2.setGeometry(QtCore.QRect(410, 30, 341, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_3.setGeometry(QtCore.QRect(770, 30, 211, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setUnderline(False)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_4.setGeometry(QtCore.QRect(1000, 30, 531, 41))
        font = QtGui.QFont()
        font.setPointSize(6)
        font.setUnderline(False)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_3.setGeometry(QtCore.QRect(0, 300, 1181, 101))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_5 = QtWidgets.QLabel(self.groupBox_3)
        self.label_5.setGeometry(QtCore.QRect(850, 40, 55, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 0px;\n"
"border-style:inset;")
        self.label_5.setObjectName("label_5")
        self.textBrowser_6 = QtWidgets.QTextBrowser(self.groupBox_3)
        self.textBrowser_6.setGeometry(QtCore.QRect(280, 40, 231, 31))
        self.textBrowser_6.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.textBrowser_6.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_6.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_6.setObjectName("textBrowser_6")
        self.label_6 = QtWidgets.QLabel(self.groupBox_3)
        self.label_6.setGeometry(QtCore.QRect(210, 40, 55, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 0px;\n"
"border-style:inset;")
        self.label_6.setObjectName("label_6")
        self.textBrowser_7 = QtWidgets.QTextBrowser(self.groupBox_3)
        self.textBrowser_7.setGeometry(QtCore.QRect(600, 40, 231, 31))
        self.textBrowser_7.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.textBrowser_7.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_7.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_7.setObjectName("textBrowser_7")
        self.label_7 = QtWidgets.QLabel(self.groupBox_3)
        self.label_7.setGeometry(QtCore.QRect(540, 40, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 0px;\n"
"border-style:inset;")
        self.label_7.setObjectName("label_7")
        self.textBrowser_8 = QtWidgets.QTextBrowser(self.groupBox_3)
        self.textBrowser_8.setGeometry(QtCore.QRect(920, 40, 231, 31))
        self.textBrowser_8.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;\n"
"")
        self.textBrowser_8.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_8.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_8.setObjectName("textBrowser_8")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.groupBox_3)
        self.textBrowser_2.setGeometry(QtCore.QRect(80, 40, 91, 31))
        self.textBrowser_2.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.textBrowser_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label = QtWidgets.QLabel(self.groupBox_3)
        self.label.setGeometry(QtCore.QRect(10, 50, 55, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 0px;\n"
"border-style:inset;")
        self.label.setObjectName("label")
        self.groupBox_4 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_4.setGeometry(QtCore.QRect(0, 430, 881, 101))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.groupBox_4.setObjectName("groupBox_4")
        self.label_8 = QtWidgets.QLabel(self.groupBox_4)
        self.label_8.setGeometry(QtCore.QRect(20, 40, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 0px;\n"
"border-style:inset;")
        self.label_8.setObjectName("label_8")
        self.textBrowser_12 = QtWidgets.QTextBrowser(self.groupBox_4)
        self.textBrowser_12.setGeometry(QtCore.QRect(110, 40, 331, 31))
        self.textBrowser_12.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;\n"
"")
        self.textBrowser_12.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_12.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_12.setObjectName("textBrowser_12")
        self.textBrowser_10 = QtWidgets.QTextBrowser(self.groupBox_4)
        self.textBrowser_10.setGeometry(QtCore.QRect(600, 40, 231, 31))
        self.textBrowser_10.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;\n"
"")
        self.textBrowser_10.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_10.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textBrowser_10.setObjectName("textBrowser_10")
        self.label_9 = QtWidgets.QLabel(self.groupBox_4)
        self.label_9.setGeometry(QtCore.QRect(530, 40, 55, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 0px;\n"
"border-style:inset;")
        self.label_9.setObjectName("label_9")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.textBrowser = QtWidgets.QTextBrowser(self.tab_2)
        self.textBrowser.setGeometry(QtCore.QRect(0, 0, 1609, 1131))
        self.textBrowser.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border-width : 1px;\n"
"border-style:inset;")
        self.textBrowser.setObjectName("textBrowser")
        self.tabWidget.addTab(self.tab_2, "")

        self.retranslateUi(Form)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Form)

        Form.setStyleSheet("""
        /*
Material Dark Style Sheet for QT Applications
Author: Jaime A. Quiroga P.
Inspired on https://github.com/jxfwinter/qt-material-stylesheet
Company: GTRONICK
Last updated: 04/12/2018, 15:00.
Available at: https://github.com/GTRONICK/QSS/blob/master/MaterialDark.qss
*/
QMainWindow {
	background-color:#1e1d23;
}
QDialog {
	background-color:#1e1d23;
}
QColorDialog {
	background-color:#1e1d23;
}
QTextEdit {
	background-color:#1e1d23;
	color: #a9b7c6;
}
QPlainTextEdit {
	selection-background-color:#007b50;
	background-color:#1e1d23;
	border-style: solid;
	border-top-color: transparent;
	border-right-color: transparent;
	border-left-color: transparent;
	border-bottom-color: transparent;
	border-width: 1px;
	color: #a9b7c6;
}

QToolButton {
	border-style: solid;
	border-top-color: transparent;
	border-right-color: transparent;
	border-left-color: transparent;
	border-bottom-color: #04b97f;
	border-bottom-width: 1px;
	border-style: solid;
	color: #a9b7c6;
	padding: 2px;
	background-color: #1e1d23;
}
QToolButton:hover{
	border-style: solid;
	border-top-color: transparent;
	border-right-color: transparent;
	border-left-color: transparent;
	border-bottom-color: #37efba;
	border-bottom-width: 2px;
	border-style: solid;
	color: #FFFFFF;
	padding-bottom: 1px;
	background-color: #1e1d23;
}

QLineEdit {
	border-width: 1px; border-radius: 4px;
	border-color: rgb(58, 58, 58);
	border-style: inset;
	padding: 0 8px;
	color: #a9b7c6;
	background:#1e1d23;
	selection-background-color:#007b50;
	selection-color: #FFFFFF;
}
QLabel {
	color: #a9b7c6;
}
QLCDNumber {
	color: #37e6b4;
}
QProgressBar {
	text-align: center;
	color: rgb(240, 240, 240);
	border-width: 1px; 
	border-radius: 10px;
	border-color: rgb(58, 58, 58);
	border-style: inset;
	background-color:#1e1d23;
}
QProgressBar::chunk {
	background-color: #04b97f;
	border-radius: 5px;
}
QMenuBar {
	background-color: #1e1d23;
}
QMenuBar::item {
	color: #a9b7c6;
  	spacing: 3px;
  	padding: 1px 4px;
  	background: #1e1d23;
}

QMenuBar::item:selected {
  	background:#1e1d23;
	color: #FFFFFF;
}
QMenu::item:selected {
	border-style: solid;
	border-top-color: transparent;
	border-right-color: transparent;
	border-left-color: #04b97f;
	border-bottom-color: transparent;
	border-left-width: 2px;
	color: #FFFFFF;
	padding-left:15px;
	padding-top:4px;
	padding-bottom:4px;
	padding-right:7px;
	background-color: #1e1d23;
}
QMenu::item {
	border-style: solid;
	border-top-color: transparent;
	border-right-color: transparent;
	border-left-color: transparent;
	border-bottom-color: transparent;
	border-bottom-width: 1px;
	border-style: solid;
	color: #a9b7c6;
	padding-left:17px;
	padding-top:4px;
	padding-bottom:4px;
	padding-right:7px;
	background-color: #1e1d23;
}
QMenu{
	background-color:#1e1d23;
}
QTabWidget {
	color:rgb(0,0,0);
	background-color:#1e1d23;
}
QTabWidget::pane {
		border-color: rgb(77,77,77);
		background-color:#1e1d23;
		border-style: solid;
		border-width: 1px;
    	border-radius: 6px;
}
QTabBar::tab {
	border-style: solid;
	border-top-color: transparent;
	border-right-color: transparent;
	border-left-color: transparent;
	border-bottom-color: transparent;
	border-bottom-width: 1px;
	border-style: solid;
	color: #808086;
	padding: 3px;
	margin-left:3px;
	background-color: #1e1d23;
}
QTabBar::tab:selected, QTabBar::tab:last:selected, QTabBar::tab:hover {
  	border-style: solid;
	border-top-color: transparent;
	border-right-color: transparent;
	border-left-color: transparent;
	border-bottom-color: #04b97f;
	border-bottom-width: 2px;
	border-style: solid;
	color: #FFFFFF;
	padding-left: 3px;
	padding-bottom: 2px;
	margin-left:3px;
	background-color: #1e1d23;
}

QCheckBox {
	color: #a9b7c6;
	padding: 2px;
}
QCheckBox:disabled {
	color: #808086;
	padding: 2px;
}

QCheckBox:hover {
	border-radius:4px;
	border-style:solid;
	padding-left: 1px;
	padding-right: 1px;
	padding-bottom: 1px;
	padding-top: 1px;
	border-width:1px;
	border-color: rgb(87, 97, 106);
	background-color:#1e1d23;
}
QCheckBox::indicator:checked {

	height: 10px;
	width: 10px;
	border-style:solid;
	border-width: 1px;
	border-color: #04b97f;
	color: #a9b7c6;
	background-color: #04b97f;
}
QCheckBox::indicator:unchecked {

	height: 10px;
	width: 10px;
	border-style:solid;
	border-width: 1px;
	border-color: #04b97f;
	color: #a9b7c6;
	background-color: transparent;
}
QRadioButton {
	color: #a9b7c6;
	background-color: #1e1d23;
	padding: 1px;
}
QRadioButton::indicator:checked {
	height: 10px;
	width: 10px;
	border-style:solid;
	border-radius:5px;
	border-width: 1px;
	border-color: #04b97f;
	color: #a9b7c6;
	background-color: #04b97f;
}
QRadioButton::indicator:!checked {
	height: 10px;
	width: 10px;
	border-style:solid;
	border-radius:5px;
	border-width: 1px;
	border-color: #04b97f;
	color: #a9b7c6;
	background-color: transparent;
}
QStatusBar {
	color:#027f7f;
}
QSpinBox {
	color: #a9b7c6;	
	background-color: #1e1d23;
}
QDoubleSpinBox {
	color: #a9b7c6;	
	background-color: #1e1d23;
}
QTimeEdit {
	color: #a9b7c6;	
	background-color: #1e1d23;
}
QDateTimeEdit {
	color: #a9b7c6;	
	background-color: #1e1d23;
}
QDateEdit {
	color: #a9b7c6;	
	background-color: #1e1d23;
}
QComboBox {
	color: #a9b7c6;	
	background: #1e1d23;
}
QComboBox:editable {
	background: #1e1d23;
	color: #a9b7c6;
	selection-background-color: #1e1d23;
}
QComboBox QAbstractItemView {
	color: #a9b7c6;	
	background: #1e1d23;
	selection-color: #FFFFFF;
	selection-background-color: #1e1d23;
}
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
	color: #a9b7c6;	
	background: #1e1d23;
}
QFontComboBox {
	color: #a9b7c6;	
	background-color: #1e1d23;
}
QToolBox {
	color: #a9b7c6;
	background-color: #1e1d23;
}
QToolBox::tab {
	color: #a9b7c6;
	background-color: #1e1d23;
}
QToolBox::tab:selected {
	color: #FFFFFF;
	background-color: #1e1d23;
}
QScrollArea {
	color: #FFFFFF;
	background-color: #1e1d23;
}
QSlider::groove:horizontal {
	height: 5px;
	background: #04b97f;
}
QSlider::groove:vertical {
	width: 5px;
	background: #04b97f;
}
QSlider::handle:horizontal {
	background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #b4b4b4, stop:1 #8f8f8f);
	border: 1px solid #5c5c5c;
	width: 14px;
	margin: -5px 0;
	border-radius: 7px;
}
QSlider::handle:vertical {
	background: qlineargradient(x1:1, y1:1, x2:0, y2:0, stop:0 #b4b4b4, stop:1 #8f8f8f);
	border: 1px solid #5c5c5c;
	height: 14px;
	margin: 0 -5px;
	border-radius: 7px;
}
QSlider::add-page:horizontal {
    background: white;
}
QSlider::add-page:vertical {
    background: white;
}
QSlider::sub-page:horizontal {
    background: #04b97f;
}
QSlider::sub-page:vertical {
    background: #04b97f;
}
/*split*/
QPushButton{
	border-style: solid;
	border-color: #050a0e;
	border-width: 1px;
	border-radius: 5px;
	color: #d3dae3;
	padding: 2px;
	background-color: #100E19;
}
QPushButton::default{
	border-style: solid;
	border-color: #050a0e;
	border-width: 1px;
	border-radius: 5px;
	color: #FFFFFF;
	padding: 2px;
	background-color: #151a1e;
}
QPushButton:hover{
	border-style: solid;
	border-top-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #C0DB50, stop:0.4 #C0DB50, stop:0.5 #100E19, stop:1 #100E19);
    border-bottom-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #100E19, stop:0.5 #100E19, stop:0.6 #C0DB50, stop:1 #C0DB50);
    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #C0DB50, stop:0.3 #C0DB50, stop:0.7 #100E19, stop:1 #100E19);
    border-right-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 #C0DB50, stop:0.3 #C0DB50, stop:0.7 #100E19, stop:1 #100E19);
	border-width: 2px;
    border-radius: 1px;
	color: #d3dae3;
	padding: 2px;
}
QPushButton:pressed{
	border-style: solid;
	border-top-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #d33af1, stop:0.4 #d33af1, stop:0.5 #100E19, stop:1 #100E19);
    border-bottom-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #100E19, stop:0.5 #100E19, stop:0.6 #d33af1, stop:1 #d33af1);
    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #d33af1, stop:0.3 #d33af1, stop:0.7 #100E19, stop:1 #100E19);
    border-right-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 #d33af1, stop:0.3 #d33af1, stop:0.7 #100E19, stop:1 #100E19);
	border-width: 2px;
    border-radius: 1px;
	color: #d3dae3;
	padding: 2px;
}

QStackedWidget {
    background-color: #1e1d23;
    border: 1px solid rgb(77, 77, 77);
    border-radius: 6px;
}

QStackedWidget {
    background-color: #1e1d23;
    border: 1px solid rgb(77, 77, 77);
    border-radius: 6px;
}

QStackedWidget::widget {
    padding: 6px;
}

QStackedWidget::widget:selected {
    background-color: #1e1d23;
    border-bottom: 2px solid #04b97f;
}

QStackedWidget::widget:hover {
    border-bottom: 1px solid #04b97f;
}

    """)
                
        self.pushButton.clicked.connect(self.Newton_Equi)

    def Newton_Equi(self):
        XMAXLEFT=[]
        XMAXRIGHT=[]
        X = [float(i) for i in self.lineEdit.text().split()]
        Y = [float(i) for i in self.lineEdit_2.text().split()]
        if ((len(X)!=len(Y))or(len(X)==0)or(len(X)==1)):
                message_box = QMessageBox()
                message_box.setWindowTitle("Invalid Input")
                message_box.setIcon(QMessageBox.Warning)
                message_box.setText("Invalid Please Enter Another X and Y values")
                message_box.setStandardButtons(QMessageBox.Ok)
                message_box.exec_()
                message_box.hide()
                return
                X = [float(i) for i in self.lineEdit.text().split()]
                Y = [float(i) for i in self.lineEdit_2.text().split()]
        h = X[1]-X[0]
        c="valid"
        h=round(h,5)
        for i in range(1,len(X)):
                if (round(X[i]-X[i-1],5)!=h):
                        c="Invalid"
                        break
        if(c=="Invalid"):
                message_box = QMessageBox()
                message_box.setWindowTitle("Invalid Input")
                message_box.setIcon(QMessageBox.Warning)
                message_box.setText("Invalid Please Enter Another X and Y values")
                message_box.setStandardButtons(QMessageBox.Ok)
                message_box.exec_()
                return
                X = [float(i) for i in self.lineEdit.text().split()]
                Y = [float(i) for i in self.lineEdit_2.text().split()]
                while ((len(X) != len(Y)) or (len(X) == 0) or (len(X) == 1)):
                                message_box = QMessageBox()
                                message_box.setWindowTitle("Invalid Input")
                                message_box.setIcon(QMessageBox.Warning)
                                message_box.setText("Please enter valid data!")
                                message_box.setStandardButtons(QMessageBox.Ok)
                                message_box.exec_()     
                                X = [float(i) for i in self.lineEdit.text().split()]
                                Y = [float(i) for i in self.lineEdit_2.text().split()]
                for i in range(1, len(X)):
                            if (round(X[i],5) - round(X[i-1],5) != h):
                                c = "Invalid"
                                break
                                c="valid"
        value = float(self.lineEdit_3.text())
        PolyType=(int(self.lineEdit_4.text()))
        plt.plot(X, Y, marker='o', linestyle='', markersize=8, color='r')
        plt.plot(X, Y, color='tab:blue')
        plt.xlabel('X-Axis')
        plt.ylabel('Y-Axis')
        plt.title('Newton Equidistant Interpolation Plot')
        plt.legend()
        plt.show()
        if (PolyType>len(X)-1):
                message_box = QMessageBox()
                message_box.setWindowTitle("Invalid Input")
                message_box.setIcon(QMessageBox.Warning)
                message_box.setText("Polynomial is not less than or equal to Number of Points-1")
                message_box.setStandardButtons(QMessageBox.Ok)
                message_box.exec_()   
                return
                PolyType = (int(self.lineEdit_4.text()))
        CopyX2=X.copy()
        X.sort(key=lambda x: abs(x - value))
        CopyX=X.copy()
        CopyX1=CopyX.copy()
        if (CopyX1[0]-value==value-CopyX1[1])and(CopyX1[1]>CopyX1[0])and(value>CopyX1[len(X)-2]):
                K=CopyX1[0]
                CopyX1[0]=CopyX1[1]
                CopyX1[1] = K
        if(np.array_equal(CopyX1,np.flip(CopyX2))==True):
                CopyY= [x for _, x in sorted(zip(CopyX1, Y))]
                h=(-1)*h
        else:
                NearestX = CopyX[0]
                XMAXLEFT.append(NearestX)
                XMAXRIGHT.append(NearestX)
                while (CopyX.count(round(NearestX + h, 8)) == 1):
                        XMAXRIGHT.append(round(NearestX + h, 8))
                        NearestX += h
                NearestX = CopyX[0]
                while (CopyX.count(round(NearestX - h, 8)) == 1):
                        XMAXLEFT.append(round(NearestX - h, 8))
                        NearestX -= h
                if (len(XMAXLEFT) + len(XMAXRIGHT) < PolyType + 1):
                        c1="Invalid Points"
                else:
                        if (len(XMAXRIGHT) > PolyType):
                                CopyX1=[]
                                for i in range(len(XMAXRIGHT)):
                                        CopyX1.append(XMAXRIGHT[i])
                        elif (len(XMAXLEFT) > PolyType):
                                CopyX1=[]
                                for i in range(len(XMAXLEFT)):
                                        CopyX1.append(XMAXLEFT[i])
                        else:
                                CopyX1=[]
                                XMAXLEFT = XMAXLEFT[::-1]
                                for i in range(0, len(XMAXLEFT)):
                                        CopyX1.append(XMAXLEFT[i])
                                for i in range(1, len(XMAXRIGHT)):
                                        CopyX1.append(XMAXRIGHT[i])
                CopyY = [x for _, x in sorted(zip(CopyX1, Y))]
                if (CopyX1[0]>CopyX1[1]):
                        h=-1*(h)
        AlphaK=(value-CopyX1[0])/h
        AllCoefficients = []
        AllCoefficients.append(CopyY[0])
        SomeCoefficients = []
        SomeCoefficients.append(CopyY[0])
        T=0
        FunctionX=0
        for i in range(0,len(CopyX1)-1):
                T=CopyY[1]-CopyY[0]
                AllCoefficients.append(T)
                for j in range(1,len(CopyY)):
                        CopyY[j-1]=CopyY[j]-CopyY[j-1]
        for i in range(1,PolyType):
         SomeCoefficients.append(AllCoefficients[i])
        alpha = sp.Symbol('alpha')  # symbol for x
        fun = sp.Symbol('fun')  # symbol for f(x)
        symbol_y = sp.Symbol('symbol_y')  # symbol for y
        symbol_r = sp.Symbol('symbol_r')  # symbol for r
        product_p=sp.Symbol('product_p')  # symbol for product
        fun=AllCoefficients[0]
        FunctionX=AllCoefficients[0]
        YofX=0.1
        YofX=AllCoefficients[0]
        R=0
        for i in range(1,len(AllCoefficients)):
                product_p=1
                for j in range(1,i+1):
                        product_p=product_p*(alpha-(j-1))
                        l=(AllCoefficients[i]/math.factorial(i))
                fun=fun+(l*product_p)
                if (i==len(SomeCoefficients)):
                        symbol_y=fun
                        YofX=fun.subs({alpha:AlphaK,fun:fun})
                        symbol_r=0
                if (i==len(SomeCoefficients)+1):
                        symbol_r=fun-symbol_y
                        R=FunctionX-YofX
        FunctionX=fun.subs({alpha:AlphaK,fun:fun})
        fdashFormatTotal = sp.diff(fun, alpha)  # fdash in symbols
        fdashTotal = (fdashFormatTotal.subs({alpha: AlphaK, fun: fun})/h)
        fdashFormat = sp.diff(symbol_y, alpha)  # fdash in symbols using y
        fdash = (fdashFormat.subs({alpha: AlphaK, fun: symbol_y})/h)
        self.textBrowser_5.setText(str(fun))
        self.textBrowser_3.setText(str(symbol_y))
        self.textBrowser_4.setText(str(symbol_r))
        self.textBrowser_2.setText(str(value))
        self.textBrowser_6.setText(str(YofX))
        self.textBrowser_7.setText(str(R))
        self.textBrowser_8.setText(str(FunctionX))
        self.textBrowser_12.setText(str(fdashTotal))
        self.textBrowser_10.setText(str(fdash))
      
        


    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.groupBox_2.setTitle(_translate("Form", "Normal Form"))
        self.label_2.setText(_translate("Form", "F(X) ="))
        self.label_3.setText(_translate("Form", "Y(X) ="))
        self.label_4.setText(_translate("Form", "R(X) ="))
        self.pushButton.setText(_translate("Form", "Proceed"))
        self.groupBox.setTitle(_translate("Form", "Input"))
        self.lineEdit.setPlaceholderText(_translate("Form", "Enter X elements separated by spaces"))
        self.lineEdit_2.setPlaceholderText(_translate("Form", "Enter Y elements separated by spaces"))
        self.lineEdit_3.setPlaceholderText(_translate("Form", "Enter Specific Value"))
        self.lineEdit_4.setPlaceholderText(_translate("Form", "Please Enter your wanted degree of Polynomial(Be aware that It must be less than or equal to Number of Points-1)"))
        self.groupBox_3.setTitle(_translate("Form", "Output At Specific Values"))
        self.label_5.setText(_translate("Form", "F(X) ="))
        self.label_6.setText(_translate("Form", "Y(X) ="))
        self.label_7.setText(_translate("Form", "R(X) ="))
        self.label.setText(_translate("Form", "At x ="))
        self.groupBox_4.setTitle(_translate("Form", "The Deravitive Form"))
        self.label_8.setText(_translate("Form", "F\'(x) total="))
        self.label_9.setText(_translate("Form", "F\'(X) ="))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Form", "I/O"))
        self.textBrowser.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; font-weight:600; font-style:italic; color:#ff0000;\">Newton Equidistant Method</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; text-decoration: underline;\">The Input</span><span style=\" font-size:10pt;\">:X elements separated by SPACES</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Y elements separated by SPACES</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">The value of x for which you want to find y (x)</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">Select the degree of polynomial wanted to calculate Y(x) or X(y)</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; color:#ff0000;\">Notes For the Input Values:</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">1) Don\'t Duplicate Values of X</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">2) Please Enter Equidistant Values of X if you want y(x)</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">3) When You Insert the degree of polynomial,Please Make Sure that it is greater than or equal to Number of Points+1 </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">4) If you want X(y)for the Finding the root please Invert the Input such that Y is First then X comes and also Don\'t Forget the First 3 rules Regarding Y</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">5) Uniformly spaced numbers are preferred. </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; text-decoration: underline;\">The Output</span><span style=\" font-size:10pt;\">:</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">The general Forms:</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">1. Normal Form : F(x): The interpolated polynomial function representing the approximation of the data points using all points given. Y(x): Symbolic expression symbol_y representing the interpolated value at a general x using number of points equivalent to the degree of polynomial+1 R(x): Symbolic expression symbol_r representing the residual error of the interpolation remaining from the previous polynomial</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">2. The derivative Form: FdashTotal(x): The Derivative form of the Interpolated Polynomial using all given points (using F(x)) Fdash(x):The Derivative form of the Interpolated Polynomial Y(x) </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">3. at a Specific X: F(value):the value of F(x) at x=value y(value):the value of y(x) at x=value R(value):the value of R(x) at x=value FdashTotal(value):The derivative of F(x) at x=value Fdash(value):The derivative of Y(x) at x1=value </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt; text-decoration: underline;\">Graph Plot</span><span style=\" font-size:10pt;\">:</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">A Graphical Representation of the degree wanted Polynomial Work Idea: </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">1)Input Validation: It first Checks that the input is valid as X,Y have Equal dimensions , 2 points at least or more , The First Values must be Equidistant,and PolyType must be Less than number of points + 1 </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">2)Sorting and Generating: Sorts the X and store the old X in values and checks if the array is inverted then invert the h value and also handling special case of midpoint values between these points In case the sorting shuffles X,we will get the nearest to X always and then try to find if there is sufficient equidistant at left or right of the X array, if there is use them else,try to make the value as near as possible by selecting max number right and the remaining number Left </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">3)Finding the values and Generating Functions: After Selecting the X , we select the corresponding y and then we do the difference table by storing the first element in allCofficients list using these Coefficients generate the Functions and their derivatives </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:10pt;\">4)Find Values and Plot Graphs: We substitute by the value in the equations and We plot the graph of the Generated Polynomial</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Form", "About Section"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Newton_Equi_Form()
    ui.setupUi(Form)
    Form.show() 
    Form.setWindowTitle("Newton General")
    sys.exit(app.exec_())
